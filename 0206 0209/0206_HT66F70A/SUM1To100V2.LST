"File: SUM1To100V2.ASM  Assembler  Version 2.97      Page 1


   1  0000              ; PROGRAM : SUM1To100V2.ASM            By Steven                    
   2  0000              ; FUNCTION: BCD DEMO PROGRAM         2017.0512      		  
   3  0000              #INCLUDE    HT66F70A.INC 


   4  0000              ;=================================================================================
   5  0000              MY_DATA    .SECTION		'DATA'    	;== DATA SECTION == 此程式效能比上一個較好 請看輸出往上拉 ROM RAM 的Total Used
   6  0000  0002[       SUM    	DB   	2 DUP	(?)         ;DUP是複製duplication 紅字2=複製2次  ==>>SUM[0] SUM[1]
            00
            ]
   7  0002  00          X    	DB      ?                  	;;;此版本是從100開始加到1  反過來 比較快
   8  0003              ;========================================================================================
   9  0000              MY_CODE    .SECTION	 at 0	'CODE' 	;== PROGRAM SECTION == 
  10  0000  0FAF        		MOV		A,0AFh				;DISABLE WDT
  11  0001  00BE        		MOV		WDTC,A
  12  0002  1F00     R  		CLR		SUM[0]
  13  0003  1F00     R  		CLR		SUM[1]
  14  0004  0F64        		MOV		A,100			;A=100
  15  0005  0080     R  		MOV		X,A				;X=100
  16  0006              LOOP:		
  17  0006  0700     R  		MOV		A,X				;A=X (100/99...1)
  18  0007  0380     R  		ADDM	A,SUM[0]		;SUM[0]=A+SUM[0] (100+99+...+1) {當加超過256會進位到C}
  19  0008  1F05        		CLR		ACC				;清除ACC EQU 05H  不能寫A因為會判別成Syntax error 但可以寫成[05H]{此為累加器A的記憶體位置}
  20  0009  1380     R  		ADCM	A,SUM[1]		;A=A+SUM[1]+C暫存器SUM[1]累加器A以及進位旗標C相加 將結果存至A
  21  000A  1780     R  		SDZ		X				;將暫存器-1，若結果為0則跳過下一行 99/98.../1/0
  22  000B  2806        		JMP		LOOP
  23  000C  280C        		JMP		$
  24  000D              		
  25  000D              		;最後請觀察下面變數 SUM[1]=19  *256(2^8) + SUM[0]=186 = 4864+186=5050  //OR  16進位0x13ba = 5050


        0 Errors, 0 Warnings